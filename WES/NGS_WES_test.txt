 #bash pipeline / for문 / xargs 명령어 사용법 알기

1) cd WES_WGS/00_RawData 
seqtk sample -s 11  NIST7035_TAAGGCGA_L001_R1_001.fastq.gz 1000 | gzip -c > sample_R1.fastq.gz
seqtk sample -s 11  NIST7035_TAAGGCGA_L001_R2_001.fastq.gz 1000 | gzip -c > sample_R2.fastq.gz

2) cd WES_WGS
mkdir 01_FASTQC 
fastqc -t 2 -o 01_FASTQC 00_RawData/sample_R1.fastq.gz 
fastqc -t 2 -o 01_FASTQC 00_RawData/sample_R2.fastq.gz

3) cd WES_WGS
mkdir 02_Trimmomatic  
trimmomatic PE 00_RawData/sample_R1.fastq.gz 00_RawData/sample_R2.fastq.gz 02_Trimmomatic/sample_R1_P.fastq 02_Trimmomatic/sample_R1_U.fastq 02_Trimmomatic/sample_R2_P.fastq 02_Trimmomatic/sample_R2_U.fastq ILLUMINACLIP:/home/ubuntu/miniconda3/share/trimmomatic-0.38-1/adapters/TruSeq3-PE-2.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:80

4) cd WES_WGS
mkdir 03_BWA
bwa mem -t2 -M -R '@RG\tID:Sample\tLB:Sample\tPL:ILLUMINA\tPM:HISEQ2500\tSM:Sample' /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta 02_Trimmomatic/sample_R1_P.fastq 02_Trimmomatic/sample_R2_P.fastq > 03_BWA/sample.sam

5) cd WES_WGS/03_BWA  
samtools view -Sb sample.sam > sample.bam

6) cd WES_WGS
mkdir 04_Sort
samtools sort 03_BWA/sample.bam 04_Sort/sample_sort

7) cd WES_WGS/04_Sort
samtools index sample_sort.bam

8) cd WES_WGS
mkdir 05_DeDuplicate
gatk MarkDuplicates --INPUT 04_Sort/sample_sort.bam --OUTPUT 05_DeDuplicate/sample_dedup.bam --METRICS_FILE 05_DeDuplicate/sample_dedup.metrics
gatk BuildBamIndex --INPUT 05_DeDuplicate/sample_dedup.bam 

9) chr1 chr2 chr3 ... chr22 chrX chrY 가 세로로 나열되어 있는 05_DeDuplicate/chr_list를 만든다.
- 크로모좀 리스트는 1~22, XY까지 실습 때 썼는데, 원하면은 레퍼런스의 contig 에 있는 요소들은 추가할 수 있습니다. 예를들면 chrM(미토콘드리아), chrUn(Unknown), 기타 등등 ..

10) cd 05_DeDuplicate
for i in `cat chr_list`; do samtools view -bh ./sample_dedup.bam ${i} > ./sample_dedup.${i}.bam ; done
for i in `cat chr_list`; do gatk BuildBamIndex --INPUT ./sample_dedup.${i}.bam; done 

11) cd WES_WGS
mkdir 06_BQSR
for i in `cat 05_DeDuplicate/chr_list`; do gatk BaseRecalibrator -I 05_DeDuplicate/sample_dedup.${i}.bam --known-sites /home/ubuntu/BioResources/Homo_Sapiens/dbsnp_138.hg19.vcf.gz --known-sites /home/ubuntu/BioResources/Homo_Sapiens/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.gz -O 06_BQSR/sample_dedup_bqsr.${i}.table -R /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta --intervals ${i}; done

12) cd WES_WGS
mkdir 07_Apply
for i in `cat 05_DeDuplicate/chr_list`; do gatk ApplyBQSR -bqsr 06_BQSR/sample_dedup_bqsr.${i}.table -I 05_DeDuplicate/sample_dedup.${i}.bam -O 07_Apply/sample_dedup_bqsr.${i}.bam -R /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta --intervals ${i}; done

13) cd WES_WGS
mkdir 08_Haplotypecall
for i in `cat 05_DeDuplicate/chr_list`; do gatk HaplotypeCaller -I 07_Apply/sample_dedup_bqsr.${i}.bam -O 08_Haplotypecall/sample_haplocall.${i}.g.vcf --emit-ref-confidence GVCF -R /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta --intervals ${i}; done

14) cd WES_WGS
mkdir 09_GatherVCF
ls -v 08_Haplotypecall/*.vcf > vcf.list 
vi vcf.list -> 순서를 chr1 chr2 chr3 ... chr22 chrX chrY로 정렬되야 한다. 만일 chrM(미토콘드리아)가 추가되면 레퍼런스와 동일하게 순서를 잘 정렬해야 한다.
gatk GatherVcfs --INPUT vcf.list -O 09_GatherVCF/sample_haplocall.vcf -REFERENCE_SEQUENCE /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta

15) cd WES_WGS 
mkdir 10_GenotypeGVCF
gatk GenotypeGVCFs --variant 09_GatherVCF/sample_haplocall.vcf -R /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta -O 10_GenotypeGVCF/sample_haplocall.vcf

16) cd WES_WGS 
mkdir 11_VariantFiltration
gatk VariantFiltration --R /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta --V 10_GenotypeGVCF/sample_haplocall.vcf --filter-name "FS" --filter "FS > 30.0" --filter-name "QD" --filter "QD < 2.0" -O 11_VariantFiltration/sample_haplocall_filt.vcf

17) cd WES_WGS 
mkdir 12_Annotation
java -jar -Xmx10g /home/ubuntu/miniconda3/share/snpeff-4.3.1t-1/snpEff.jar -v hg19 -s 12_Annotation/sample_summary.html 11_VariantFiltration/sample_haplocall_filt.vcf > 12_Annotation/sample_haplocall_ann.vcf 

# WES 자료의 경우는 Haplotypecall 단계만 수정하면 됩니다.
cd WES_WGS
mkdir 08_Haplotypecall_WES
cp /home/ubuntu/BioResources/Homo_Sapiens/hg19_UCSC_knownGene.gtf ./
자료에는 cat hg19_UCSC_knownGene.gtf | grep exon | cut -s -f 1,4,5,7,9 > KnownGene_exon.bed 로 소개 되어 있고 저희는 크로모좀 별로 분리된 bed 파일을 준비해야 합니다.
for i in `cat 05_DeDuplicate/chr_list`; do cat hg19_UCSC_knownGene.gtf | grep exon | awk ‘$1 ~ /‘“${i}“‘$/’ | cut -s -f 1,4,5,7,9 > beds_byJuwon/KnownGene_exon.${i}.bed; done
for i in `cat 05_DeDuplicate/chr_list`; do gatk HaplotypeCaller -I 07_Apply/sample_dedup_bqsr.${i}.bam -O 08_Haplotypecall/sample_haplocall.${i}.g.vcf --emit-ref-confidence GVCF -R /home/ubuntu/BioResources/Homo_Sapiens/ucsc.hg19.fasta --intervals ${i} -L KnownGene_exon.${i}.bed; done
